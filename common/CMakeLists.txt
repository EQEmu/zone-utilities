CMAKE_MINIMUM_REQUIRED(VERSION 3.10.2)

SET(common_sources
	core/compression.cpp
	core/config.cpp
	core/string_util.cpp
	eq/eq_physics.cpp
	eq/eqg_loader.cpp
	eq/eqg_model_loader.cpp
	eq/eqg_v4_loader.cpp
	eq/pfs.cpp
	eq/pfs_crc.cpp
	eq/s3d_loader.cpp
	eq/water_map.cpp
	eq/water_map_v1.cpp
	eq/water_map_v2.cpp
	eq/wld_fragment.cpp
	eq/zone_map.cpp
	math/eq_math.cpp
	math/oriented_bounding_box.cpp
	event/event_loop.cpp
)

SET(common_headers
	core/any.h
	core/compression.h
	core/config.h
	core/octree.h
	core/safe_alloc.h
	core/string_util.h
	eq/eq_physics.h
	eq/eqemu_endian.h
	eq/eqg_geometry.h
	eq/eqg_invis_wall.h
	eq/eqg_loader.h
	eq/eqg_material.h
	eq/eqg_model_loader.h
	eq/eqg_region.h
	eq/eqg_structs.h
	eq/eqg_terrain.h
	eq/eqg_terrain_tile.h
	eq/eqg_v4_loader.h
	eq/eqg_water_sheet.h
	eq/light.h
	eq/pfs.h
	eq/pfs_crc.h
	eq/placeable.h
	eq/placeable_group.h
	eq/s3d_bsp.h
	eq/s3d_geometry.h
	eq/s3d_loader.h
	eq/s3d_skeleton_track.h
	eq/s3d_texture.h
	eq/s3d_texture_brush.h
	eq/s3d_texture_brush_set.h
	eq/water_map.h
	eq/water_map_v1.h
	eq/water_map_v2.h
	eq/wld_fragment_reference.h
	eq/wld_fragment.h
	eq/wld_structs.h
	eq/zone_map.h
	math/aligned_bounding_box.h
	math/eq_math.h
	math/oriented_bounding_box.h
	event/background_task.h
	event/event_loop.h
	event/timer.h
)

SOURCE_GROUP(core
	FILES
	core/any.h
	core/compression.cpp
	core/compression.h
	core/config.cpp
	core/config.h
	core/octree.h
	core/safe_alloc.h
	core/string_util.cpp
	core/string_util.h
)

SOURCE_GROUP(eq
	FILES
	eq/eq_physics.cpp
	eq/eq_physics.h
	eq/eqemu_endian.h
	eq/eqg_geometry.h
	eq/eqg_invis_wall.h
	eq/eqg_loader.cpp
	eq/eqg_loader.h
	eq/eqg_material.h
	eq/eqg_model_loader.cpp
	eq/eqg_model_loader.h
	eq/eqg_region.h
	eq/eqg_structs.h
	eq/eqg_terrain.h
	eq/eqg_terrain_tile.h
	eq/eqg_v4_loader.cpp
	eq/eqg_v4_loader.h
	eq/eqg_water_sheet.h
	eq/light.h
	eq/pfs.cpp
	eq/pfs.h
	eq/pfs_crc.cpp
	eq/pfs_crc.h
	eq/placeable.h
	eq/placeable_group.h
	eq/s3d_bsp.h
	eq/s3d_geometry.h
	eq/s3d_loader.cpp
	eq/s3d_loader.h
	eq/s3d_skeleton_track.h
	eq/s3d_texture.h
	eq/s3d_texture_brush.h
	eq/s3d_texture_brush_set.h
	eq/water_map.cpp
	eq/water_map.h
	eq/water_map_v1.cpp
	eq/water_map_v1.h
	eq/water_map_v2.cpp
	eq/water_map_v2.h
	eq/wld_fragment_reference.h
	eq/wld_fragment.cpp
	eq/wld_fragment.h
	eq/wld_structs.h
	eq/zone_map.cpp
	eq/zone_map.h
)

SOURCE_GROUP(math
	FILES
	math/aligned_bounding_box.h
	math/eq_math.cpp
	math/eq_math.h
	math/oriented_bounding_box.cpp
	math/oriented_bounding_box.h
)

IF(EQEMU_ENABLE_GL)
	SET(common_sources
		${common_sources}
		graphics/app.cpp
		graphics/imgui_glfw.cpp
	)
	
	SET(common_headers
		${common_headers}
		graphics/app.h
		graphics/imgui_glfw.h
	)
	
	SOURCE_GROUP(graphics
		FILES
		graphics/app.cpp
		graphics/app.h
		graphics/imgui_glfw.cpp
		graphics/imgui_glfw.h
	)
ENDIF()

ADD_LIBRARY(common ${common_sources} ${common_headers})


SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
