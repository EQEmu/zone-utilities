CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/glfw/CMake/" "${CMAKE_SOURCE_DIR}/CMake" ${CMAKE_MODULE_PATH})

PROJECT(EQEmuZoneUtils)

IF(NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING "Choose the type of build." FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

IF(MSVC)
	OPTION(EQEMU_DISABLE_CRT_SECURE_WARNINGS "Disable Secure CRT Warnings" ON)
	IF(EQEMU_DISABLE_CRT_SECURE_WARNINGS)
		ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
	ENDIF(EQEMU_DISABLE_CRT_SECURE_WARNINGS)

	OPTION(EQEMU_FAST_FLOATINGPOINT "Use MSVC /fp:fast option" ON)
	IF(EQEMU_FAST_FLOATINGPOINT)
		ADD_DEFINITIONS(/fp:fast)
	ENDIF(EQEMU_FAST_FLOATINGPOINT)
	
	OPTION(EQEMU_BUILD_MSVC_MP "Enable build with multiple processes." TRUE)
	IF(EQEMU_BUILD_MSVC_MP)
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
	ENDIF(EQEMU_BUILD_MSVC_MP)
	
	IF(CMAKE_CL_64)
		SET(ZLIB_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/zlib_x64")
		SET(FREEIMAGE_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/FreeImage_x64")
	ELSE(CMAKE_CL_64)
		SET(ZLIB_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/zlib_x86")
		SET(FREEIMAGE_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/FreeImage_x86")
	ENDIF(CMAKE_CL_64)
ENDIF(MSVC)

IF(NOT MSVC)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
ENDIF(NOT MSVC)

OPTION(EQEMU_ENABLE_GL "Enable programs that rely on OpenGL (turn off if you only want command line)" ON)
OPTION(EQEMU_ENABLE_MAP_INFO "Enable the map_info websockets interface" ON)
OPTION(EQEMU_ENABLE_LOG_TRACE "Enable trace logging" OFF)
OPTION(EQEMU_ENABLE_LOG_DEBUG "Enable debug logging" OFF)
OPTION(EQEMU_ENABLE_LOG_INFO "Enable info logging" ON)
OPTION(EQEMU_ENABLE_LOG_WARN "Enable warning logging" ON)
OPTION(EQEMU_ENABLE_LOG_ERROR "Enable error logging" ON)
OPTION(EQEMU_ENABLE_LOG_FATAL "Enable fatal error logging" ON)
SET(EQEMU_MAP_INFO_SERVER_PORT 9997 CACHE STRING "Port that the map_info server serves it's requests on")

SET(EQEMU_LOG_LEVEL 0)
IF(EQEMU_ENABLE_LOG_TRACE)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 1")
ENDIF(EQEMU_ENABLE_LOG_TRACE)

IF(EQEMU_ENABLE_LOG_DEBUG)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 2")
ENDIF(EQEMU_ENABLE_LOG_DEBUG)

IF(EQEMU_ENABLE_LOG_INFO)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 4")
ENDIF(EQEMU_ENABLE_LOG_INFO)

IF(EQEMU_ENABLE_LOG_WARN)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 8")
ENDIF(EQEMU_ENABLE_LOG_WARN)

IF(EQEMU_ENABLE_LOG_ERROR)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 16")
ENDIF(EQEMU_ENABLE_LOG_ERROR)

IF(EQEMU_ENABLE_LOG_FATAL)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 32")
ENDIF(EQEMU_ENABLE_LOG_FATAL)
ADD_DEFINITIONS(-DEQEMU_LOG_LEVEL=${EQEMU_LOG_LEVEL})
ADD_DEFINITIONS(-DEQEMU_MAP_INFO_PORT=${EQEMU_MAP_INFO_SERVER_PORT})

FIND_PACKAGE(ZLIB REQUIRED)

INCLUDE_DIRECTORIES("common" "log" "imgui" "${ZLIB_INCLUDE_DIRS}" "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glm/glm" "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/libwebsockets")

ADD_SUBDIRECTORY(common)
ADD_SUBDIRECTORY(log)
ADD_SUBDIRECTORY(azone)
ADD_SUBDIRECTORY(awater)
ADD_SUBDIRECTORY(pfs)

IF(EQEMU_ENABLE_GL)
	OPTION(EQEMU_TARGET_GL3 "Target OpenGL 3 instead of 3.3" OFF)
	IF(EQEMU_TARGET_GL3)
		ADD_DEFINITIONS(-DEQEMU_GL_DEP)
	ENDIF(EQEMU_TARGET_GL3)
	
	ADD_DEFINITIONS(-DGLEW_STATIC)
	SET(GLFW_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glfw")
	SET(GLFW_BINARY_DIR "${CMAKE_BINARY_DIR}/lib")
	
	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glfw/include" "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glew/include")
	INCLUDE_DIRECTORIES("recast/debug_utils/include" "recast/detour/include" "recast/detour_tile_cache/include" "recast/recast/include")
	
	ADD_SUBDIRECTORY(dependencies)
	ADD_SUBDIRECTORY(imgui)
	ADD_SUBDIRECTORY(recast)
	ADD_SUBDIRECTORY(map_view)
ELSE(EQEMU_ENABLE_GL)
	ADD_SUBDIRECTORY(dependencies)
ENDIF(EQEMU_ENABLE_GL)

IF(EQEMU_ENABLE_MAP_INFO)
	ADD_SUBDIRECTORY(map_info)
ENDIF(EQEMU_ENABLE_MAP_INFO)