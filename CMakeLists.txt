CMAKE_MINIMUM_REQUIRED(VERSION 3.10.2)

PROJECT(EQEmuZoneUtils)

SET(CMAKE_CXX_STANDARD 11)

IF(NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING "Choose the type of build." FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

IF(MSVC)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /fp:fast")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
ENDIF(MSVC)

OPTION(EQEMU_ENABLE_GL "Enable programs that rely on OpenGL (turn off if you only want command line)" ON)
OPTION(EQEMU_ENABLE_LOG_TRACE "Enable trace logging" OFF)
OPTION(EQEMU_ENABLE_LOG_DEBUG "Enable debug logging" OFF)
OPTION(EQEMU_ENABLE_LOG_INFO "Enable info logging" ON)
OPTION(EQEMU_ENABLE_LOG_WARN "Enable warning logging" ON)
OPTION(EQEMU_ENABLE_LOG_ERROR "Enable error logging" ON)
OPTION(EQEMU_ENABLE_LOG_FATAL "Enable fatal error logging" ON)

SET(EQEMU_LOG_LEVEL 0)
IF(EQEMU_ENABLE_LOG_TRACE)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 1")
ENDIF(EQEMU_ENABLE_LOG_TRACE)

IF(EQEMU_ENABLE_LOG_DEBUG)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 2")
ENDIF(EQEMU_ENABLE_LOG_DEBUG)

IF(EQEMU_ENABLE_LOG_INFO)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 4")
ENDIF(EQEMU_ENABLE_LOG_INFO)

IF(EQEMU_ENABLE_LOG_WARN)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 8")
ENDIF(EQEMU_ENABLE_LOG_WARN)

IF(EQEMU_ENABLE_LOG_ERROR)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 16")
ENDIF(EQEMU_ENABLE_LOG_ERROR)

IF(EQEMU_ENABLE_LOG_FATAL)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 32")
ENDIF(EQEMU_ENABLE_LOG_FATAL)
ADD_DEFINITIONS(-DEQEMU_LOG_LEVEL=${EQEMU_LOG_LEVEL})

FIND_PACKAGE(ZLIB REQUIRED)
FIND_PACKAGE(Bullet REQUIRED)

INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${BULLET_INCLUDE_DIRS})
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/common/")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/log/")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glm/glm")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/libuv/include" )

ADD_SUBDIRECTORY(dependencies/libuv)
ADD_SUBDIRECTORY(common)
ADD_SUBDIRECTORY(log)
ADD_SUBDIRECTORY(azone)
ADD_SUBDIRECTORY(awater)
ADD_SUBDIRECTORY(pfs)

#SET(BOOST_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/boost")

#FIND_PACKAGE(Boost REQUIRED)
#FIND_PACKAGE(ZLIB REQUIRED)

#INCLUDE_DIRECTORIES("common" "log" "${ZLIB_INCLUDE_DIRS}" "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glm/glm")

#IF(EQEMU_BUILD_DEPENDENCIES)
#	INCLUDE_DIRECTORIES(SYSTEM "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/bullet/src")
#ELSE(EQEMU_BUILD_DEPENDENCIES)
#	FIND_PACKAGE(Bullet REQUIRED)
#ENDIF(EQEMU_BUILD_DEPENDENCIES)

#INCLUDE_DIRECTORIES(SYSTEM "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/libuv/include" )
#INCLUDE_DIRECTORIES(SYSTEM "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/libuv/src")
#
#ADD_SUBDIRECTORY(common)
#ADD_SUBDIRECTORY(log)
#ADD_SUBDIRECTORY(azone)
#ADD_SUBDIRECTORY(awater)
#ADD_SUBDIRECTORY(pfs)

#IF(EQEMU_ENABLE_GL)
#	OPTION(EQEMU_TARGET_GL3 "Target OpenGL 3 instead of 3.3" OFF)
#	IF(EQEMU_TARGET_GL3)
#		ADD_DEFINITIONS(-DEQEMU_GL_DEP)
#	ENDIF(EQEMU_TARGET_GL3)
#	
#	ADD_DEFINITIONS(-DGLEW_STATIC)
#	SET(GLFW_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glfw")
#	SET(GLFW_BINARY_DIR "${CMAKE_BINARY_DIR}/lib")
#	
#	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glfw/include")
#	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glew/include")
#	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/imgui")
#	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/recast/debug_utils/include")
#	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/recast/detour/include")
#	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/recast/detour_tile_cache/include")
#	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/recast/recast/include")
#	
#	ADD_SUBDIRECTORY(dependencies)
#	ADD_SUBDIRECTORY(map_edit)
#ELSE(EQEMU_ENABLE_GL)
#	ADD_SUBDIRECTORY(dependencies)
#ENDIF(EQEMU_ENABLE_GL)

