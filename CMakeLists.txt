CMAKE_MINIMUM_REQUIRED(VERSION 3.10.2)

PROJECT(EQEmuZoneUtils)

SET(CMAKE_CXX_STANDARD 11)

IF(NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING "Choose the type of build." FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
SET(CMAKE_PREFIX_PATH "${CMAKE_CURRENT_SOURCE_DIR}/external" "${CMAKE_PREFIX_PATH}")

IF(MSVC)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /fp:fast")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
ENDIF(MSVC)

OPTION(EQEMU_ENABLE_GL "Enable programs that rely on OpenGL (turn off if you only want command line)" ON)
OPTION(EQEMU_ENABLE_LOG_TRACE "Enable trace logging" OFF)
OPTION(EQEMU_ENABLE_LOG_DEBUG "Enable debug logging" OFF)
OPTION(EQEMU_ENABLE_LOG_INFO "Enable info logging" ON)
OPTION(EQEMU_ENABLE_LOG_WARN "Enable warning logging" ON)
OPTION(EQEMU_ENABLE_LOG_ERROR "Enable error logging" ON)
OPTION(EQEMU_ENABLE_LOG_FATAL "Enable fatal error logging" ON)

SET(EQEMU_LOG_LEVEL 0)
IF(EQEMU_ENABLE_LOG_TRACE)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 1")
ENDIF(EQEMU_ENABLE_LOG_TRACE)

IF(EQEMU_ENABLE_LOG_DEBUG)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 2")
ENDIF(EQEMU_ENABLE_LOG_DEBUG)

IF(EQEMU_ENABLE_LOG_INFO)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 4")
ENDIF(EQEMU_ENABLE_LOG_INFO)

IF(EQEMU_ENABLE_LOG_WARN)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 8")
ENDIF(EQEMU_ENABLE_LOG_WARN)

IF(EQEMU_ENABLE_LOG_ERROR)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 16")
ENDIF(EQEMU_ENABLE_LOG_ERROR)

IF(EQEMU_ENABLE_LOG_FATAL)
	MATH(EXPR EQEMU_LOG_LEVEL "${EQEMU_LOG_LEVEL} + 32")
ENDIF(EQEMU_ENABLE_LOG_FATAL)
ADD_DEFINITIONS(-DEQEMU_LOG_LEVEL=${EQEMU_LOG_LEVEL})

FIND_PACKAGE(ZLIB REQUIRED)
FIND_PACKAGE(Bullet REQUIRED)

INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${BULLET_INCLUDE_DIRS})
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/common/")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/log/")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glm/glm")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/libuv/include")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/fmt/include")
INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/json/")

ADD_SUBDIRECTORY(dependencies/libuv)
ADD_SUBDIRECTORY(dependencies/fmt)
ADD_SUBDIRECTORY(common)
ADD_SUBDIRECTORY(log)
ADD_SUBDIRECTORY(azone)
ADD_SUBDIRECTORY(awater)
ADD_SUBDIRECTORY(pfs)

IF(EQEMU_ENABLE_GL)
	FIND_PACKAGE(GLEW REQUIRED)
	FIND_PACKAGE(OpenGL REQUIRED)

	INCLUDE_DIRECTORIES(${GLEW_INCLUDE_DIRS})
	INCLUDE_DIRECTORIES(${GLEW_INCLUDE_DIRS})
	INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIR})
	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/recast/recast/include")
	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/recast/detour_tile_cache/include")
	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/recast/detour/include")
	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/recast/debug_utils/include")
	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/imgui/")
	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/dependencies/glfw/include/")
	
	SET(GLFW_BUILD_DOCS OFF)
	SET(GLFW_BUILD_EXAMPLES OFF)
	SET(GLFW_BUILD_TESTS OFF)
	SET(GLFW_INSTALL OFF)
	ADD_SUBDIRECTORY(dependencies/glfw)
	ADD_SUBDIRECTORY(dependencies/imgui)
	ADD_SUBDIRECTORY(dependencies/recast)
	ADD_SUBDIRECTORY(map_edit)
ENDIF(EQEMU_ENABLE_GL)
