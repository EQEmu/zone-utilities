CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/glfw/CMake/" ${CMAKE_MODULE_PATH})

PROJECT(EQEmuZoneUtils)

IF(NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING "Choose the type of build." FORCE)
ENDIF(NOT CMAKE_BUILD_TYPE)

IF(MSVC)
	OPTION(EQEMU_DISABLE_CRT_SECURE_WARNINGS "Disable Secure CRT Warnings" ON)
	IF(EQEMU_DISABLE_CRT_SECURE_WARNINGS)
		ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
	ENDIF(EQEMU_DISABLE_CRT_SECURE_WARNINGS)

	OPTION(EQEMU_FAST_FLOATINGPOINT "Use MSVC /fp:fast option" ON)
	IF(EQEMU_FAST_FLOATINGPOINT)
		ADD_DEFINITIONS(/fp:fast)
	ENDIF(EQEMU_FAST_FLOATINGPOINT)
	
	OPTION(EQEMU_BUILD_MSVC_MP "Enable build with multiple processes." TRUE)
	IF(EQEMU_BUILD_MSVC_MP)
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
	ENDIF(EQEMU_BUILD_MSVC_MP)
	
	IF(CMAKE_CL_64)
		SET(ZLIB_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/zlib_x64")
	ELSE(CMAKE_CL_64)
		SET(ZLIB_ROOT "${CMAKE_CURRENT_SOURCE_DIR}/dependencies/zlib_x86")
	ENDIF(CMAKE_CL_64)
ENDIF(MSVC)

IF(NOT MSVC)
	ADD_DEFINITIONS(-std=c++0x)
ENDIF(NOT MSVC)

OPTION(EQEMU_ENABLE_GL "Enable programs that rely on OpenGL (turn off if you only want command line)" ON)
OPTION(EQEMU_INVERSE_XY "Inverse the X and Y coords on maps; this should match your server." ON)

FIND_PACKAGE(ZLIB REQUIRED)

INCLUDE_DIRECTORIES("common" "${ZLIB_INCLUDE_DIRS}" "${CMAKE_CURRENT_SOURCE_DIR}/glm/glm")

IF(EQEMU_INVERSE_XY)
	ADD_DEFINITIONS(-DINVERSEXY)
ENDIF(EQEMU_INVERSE_XY)

ADD_SUBDIRECTORY(common)
ADD_SUBDIRECTORY(azone)
ADD_SUBDIRECTORY(awater)

IF(EQEMU_ENABLE_GL)
	ADD_DEFINITIONS(-DGLEW_STATIC)
	SET(GLFW_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/glfw")
	SET(GLFW_BINARY_DIR "${CMAKE_BINARY_DIR}/lib")
	
	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/glfw/include" "${CMAKE_CURRENT_SOURCE_DIR}/glew/include")
	
	ADD_SUBDIRECTORY(glew)
	ADD_SUBDIRECTORY(glfw)
	ADD_SUBDIRECTORY(map_view)
ENDIF(EQEMU_ENABLE_GL)
